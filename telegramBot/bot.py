from pickle import TRUE
import telebot
from telebot import types
from config import tokens
import re
import requests
bot = telebot.TeleBot(tokens['token'])
import random
import json
import time


# –∫–æ–º–∞–Ω–¥–∞-–ø–æ–º–æ—â–Ω–∏–∫
@bot.message_handler(commands=['start', 'help'])
def help(message):
    help_string = '–≠—Ç–æ –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –¥–∞–π–¥–∂–µ—Å—Ç –∏–ª–∏ —Ç—Ä–µ–Ω–¥—ã –∏ –∏–Ω—Å—Ç–∞–π—Ç—ã –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö.\n\n' \
                  '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å:'\
                #   '<strong>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</strong>\n' \
                #   '/orders - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤\n' \
                #   '/?  (? - –∫–æ–¥ –∑–∞–∫–∞–∑–∞) - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ –µ–≥–æ –∫–æ–¥—É'

    markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
    item1 = types.KeyboardButton("–¢—Ä–µ–Ω–¥—ã –∏ –∏–Ω—Å–∞–π—Ç—ã üíØ")
    item2 = types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–Ω–æ–π –¥–∞–π–¥–∂–µ—Å—Ç üì∞")
    markup.add(item1)
    markup.add(item2)
    bot.send_message(message.chat.id, help_string, parse_mode='html', reply_markup= markup)



@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':

        if message.text == '–¢—Ä–µ–Ω–¥—ã –∏ –∏–Ω—Å–∞–π—Ç—ã üíØ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
            item1 = types.KeyboardButton("–ë—É—Ö–≥–∞–ª—Ç–µ—Ä üìù")
            item2 = types.KeyboardButton("–ì–µ–Ω–¥–∏—Ä–µ–∫—Ç–æ—Ä ü§µüèø")
            item3 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ø–æ—Å—Ç–º–æ–¥–µ—Ä–∞—Ü–∏—é ‚ûï")
            item4 = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            markup.add(item4)
            bot.send_message(message.chat.id, '–¢—Ä–µ–Ω–¥—ã –∏ –∏–Ω—Å–∞–π—Ç—ã:', parse_mode='html', reply_markup= markup)

        elif message.text == '–ù–æ–≤–æ—Å—Ç–Ω–æ–π –¥–∞–π–¥–∂–µ—Å—Ç üì∞':
            # time.sleep(1.5)
            # str = f'–í–° –†–§: –µ—Å–ª–∏ –ø—Ä–µ–∂–Ω–∏–π –ø—Ä–∏–Ω—Ü–∏–ø–∞–ª –Ω–µ —Ä–∞—Å—Ç–æ—Ä–≥ –¥–æ–≥–æ–≤–æ—Ä, –Ω–æ–≤—ã–π –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ—Ç –∞–≥–µ–Ω—Ç–∞ –≤–µ—Ä–Ω—É—Ç—å –¥–æ–ª–≥.\n–°—É–¥—ã –æ—à–∏–±–æ—á–Ω–æ –ø–æ—Å—á–∏—Ç–∞–ª–∏, —á—Ç–æ: –¥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ –∫ –∞–≥–µ–Ω—Ç—É —É —é—Ä–ª–∏—Ü–∞ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –ø—Ä–∞–≤–æ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–æ –Ω–µ –æ—Ç–∫–∞–∑–∞–ª–æ—Å—å –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ –æ—Ç –∞–≥–µ–Ω—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–µ–Ω–µ–≥;\n–∏–∑-–∑–∞ —ç—Ç–æ–≥–æ –∫–æ–º–ø–∞–Ω–∏—è –ø–æ–ª—É—á–∏–ª–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É —Ü–µ—Å—Å–∏–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∞–≤–æ'\
            #     f'\n\n–†–∞—Å—Ö–æ–¥—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–∞–∏–≤–∞—é—â–µ–≥–æ –∑–¥–∞–Ω–∏—è –∑–∞ —Å—á–µ—Ç –û–ú–° —Å—É–¥ –ø—Ä–∏–∑–Ω–∞–ª –Ω–µ—Ü–µ–ª–µ–≤—ã–º–∏.\n–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä—ã –∏ —Å—É–¥ –Ω–∞–ø–æ–º–Ω–∏–ª–∏: –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –û–ú–° –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ—Ç–Ω–æ—Å—è—Ç –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø—Ä–∏ –æ–∫–∞–∑–∞–Ω–∏–∏ –º–µ–¥–ø–æ–º–æ—â–∏'
           
            # bot.send_message(message.chat.id, str, parse_mode='html')
            bot.send_message(message.chat.id, "–î–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞:", parse_mode='html')
            requestbOOKERNews(message)
            bot.send_message(message.chat.id, "–î–ª—è –≥–µ–Ω–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞:", parse_mode='html')
            requestGENDIRNews(message)


        if message.text == '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä üìù':
            bot.send_message(message.chat.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞', parse_mode='html')
            requestbOOKER(message)

        elif message.text == '–ì–µ–Ω–¥–∏—Ä–µ–∫—Ç–æ—Ä ü§µüèø':
            bot.send_message(message.chat.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞', parse_mode='html')
            requestGENDIR(message)

        elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ø–æ—Å—Ç–º–æ–¥–µ—Ä–∞—Ü–∏—é ‚ûï':
            

            keyboard = types.InlineKeyboardMarkup()
            key = types.InlineKeyboardButton(text = "–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å", callback_data= f"role {message.chat.id}")
            key1 = types.InlineKeyboardButton(text = "–î–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫", callback_data= f"url  {message.chat.id}")
            key2 = types.InlineKeyboardButton(text = "–î–æ–±–∞–≤–∏—Ç—å csv —Ñ–∞–π–ª", callback_data= f"csv {message.chat.id}")
            key3 = types.InlineKeyboardButton(text = "–ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é üîô", callback_data= f"back  {message.chat.id}")
            keyboard.add(key)
            keyboard.add(key1)
            keyboard.add(key2)
            keyboard.add(key3)
            bot.send_message(message.chat.id, f"–í–∞–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

        elif message.text == '–ù–∞–∑–∞–¥ üîô':
            help_string = '–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã –ø–æ —Ä–æ–ª–∏.\n\n' \
                          '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å, –ª–∏–±–æ –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é –∏–∑ —Å–ø–∏—Å–∫–∞'\
            
            markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
            item1 = types.KeyboardButton("–¢—Ä–µ–Ω–¥—ã –∏ –∏–Ω—Å–∞–π—Ç—ã üíØ")
            item2 = types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–Ω–æ–π –¥–∞–π–¥–∂–µ—Å—Ç üì∞")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, help_string, parse_mode='html', reply_markup= markup)



# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):

    state = call.data.split()[0]
    if state == "back":

        help_string = '–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã –ø–æ —Ä–æ–ª–∏.\n\n' \
                          '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å, –ª–∏–±–æ –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é –∏–∑ —Å–ø–∏—Å–∫–∞'\
            
        markup = types.ReplyKeyboardMarkup(resize_keyboard= True)
        item1 = types.KeyboardButton("–¢—Ä–µ–Ω–¥—ã –∏ –∏–Ω—Å–∞–π—Ç—ã üíØ")
        item2 = types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–Ω–æ–π –¥–∞–π–¥–∂–µ—Å—Ç üì∞")
        markup.add(item1)
        markup.add(item2)
        bot.send_message(call.message.chat.id, help_string, parse_mode='html', reply_markup= markup)

    elif state == "role":
        
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–æ–ª—å:')
        bot.register_next_step_handler(msg, roleInput)
    
    elif state == "url":
        
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫:')
        bot.register_next_step_handler(msg, urlInput)
    
    elif state == "csv":
        
        msg = bot.send_message(call.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ csv —Ñ–∞–π–ª:')
        bot.register_next_step_handler(msg, csvInput)


def roleInput(message):
    if(validateRole(message.text) == True):
        tmp = "–†–æ–ª—å " + message.text + f" –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –≤ –ø–æ—Å—Ç–º–æ–¥–µ—Ä–∞—Ü–∏—é\n" + "–ï—Å–ª–∏ —Ä–æ–ª—å –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∞, –æ–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –∏–Ω—Å–∞–π—Ç–æ–≤"
        bot.send_message(message.chat.id, tmp, parse_mode='html')
    else:
        bot.send_message(message.chat.id, "–†–æ–ª—å –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ", parse_mode='html')

def urlInput(message):
    if(validateURL(message.text) == True):
        tmp = "–ò—Å—Ç–æ—á–Ω–∏–∫  " + message.text + f" –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –≤ –ø–æ—Å—Ç–º–æ–¥–µ—Ä–∞—Ü–∏—é\n" + "–ï—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω, —Ç–æ –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
        bot.send_message(message.chat.id, tmp, parse_mode='html')
    else:
        bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ", parse_mode='html')

def csvInput(message):
    tmp = "–§–∞–π–ª  " +  f"–±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –≤ –ø–æ—Å—Ç–º–æ–¥–µ—Ä–∞—Ü–∏—é\n" + "–ï—Å–ª–∏ —Ñ–∞–π–ª –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω, —Ç–æ –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤"
    bot.send_message(message.chat.id, tmp, parse_mode='html')
    print(message.document)

def requestbOOKER(message):
    x = requests.get('http://localhost:8080/api/vi/trend', params={'role':'BOOKER', 'path':'https://ipfs.io/ipfs/QmUXoBGrZ52PtyEEzY7nxfiJmmm5MLcnWY2sZsQxMfq7d5?filename=df_buh_concat_ver5.csv'})
    data = getParseData(x.text)
    # time.sleep(1.5)
    # data = 'Trend: –º–æ–º–µ–Ω—Ç –¥–æ–ª–∂–Ω–∏–∫ –≤–æ–∑–Ω–∏–∫–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ'\
    #         f'\nInsight: –í–° –†–§ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, –∫–∞–∫–∏–µ —É–±—ã—Ç–∫–∏ –º–æ–∂–Ω–æ –≤–∑—ã—Å–∫–∞—Ç—å —Å –≥–æ—Å–∑–∞–∫–∞–∑—á–∏–∫–∞, –µ—Å–ª–∏ –∑–∞–∫—É–ø–∫—É –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ –µ–≥–æ –≤–∏–Ω–µ'
    bot.send_message(message.chat.id, data, parse_mode='html')

def requestGENDIR(message):
    x = requests.get('http://localhost:8080/api/vi/trend', params={'role':'OWNER', 'path':'https://ipfs.io/ipfs/QmTfxxUbAmXTrmRXn4rnXqGXbWU1q1xLWdR5XyScdHG8Vo?filename=df_bus_concat_ver2.csv'})
    data = getParseData(x.text)
    # time.sleep(1.5)
    # data = 'Trend: —Ä–æ—Å—Å–∏—è –æ—Ç–∫—Ä—ã—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ'\
    #         f'\nInsight: –ü–æ–∑–¥–Ω–µ–µ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ –†–æ—Å—Å–∏–∏ —É—Ç–≤–µ—Ä–¥–∏–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–µ—Ä–µ—á–µ–Ω—å —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞, –¥–æ–±–∞–≤–∏–≤ –≤ –Ω–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ü–∏—é Siemens, BMW –∏ LEGO'
    bot.send_message(message.chat.id, data, parse_mode='html')

def requestbOOKERNews(message):
    x = requests.get('http://localhost:8080/api/v1/digest', params={'role':'BOOKER', 'path':'https://ipfs.io/ipfs/QmUXoBGrZ52PtyEEzY7nxfiJmmm5MLcnWY2sZsQxMfq7d5?filename=df_buh_concat_ver5.csv'})
    data = getParseNews(x.text)
    # time.sleep(1.5)
    # data = 'Trend: –º–æ–º–µ–Ω—Ç –¥–æ–ª–∂–Ω–∏–∫ –≤–æ–∑–Ω–∏–∫–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ'\
    #         f'\nInsight: –í–° –†–§ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, –∫–∞–∫–∏–µ —É–±—ã—Ç–∫–∏ –º–æ–∂–Ω–æ –≤–∑—ã—Å–∫–∞—Ç—å —Å –≥–æ—Å–∑–∞–∫–∞–∑—á–∏–∫–∞, –µ—Å–ª–∏ –∑–∞–∫—É–ø–∫—É –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ –µ–≥–æ –≤–∏–Ω–µ'
    bot.send_message(message.chat.id, data, parse_mode='html')

def requestGENDIRNews(message):
    x = requests.get('http://localhost:8080/api/v1/digest', params={'role':'OWNER', 'path':'https://ipfs.io/ipfs/QmTfxxUbAmXTrmRXn4rnXqGXbWU1q1xLWdR5XyScdHG8Vo?filename=df_bus_concat_ver2.csv'})
    data = getParseNews(x.text)
    # time.sleep(1.5)
    # data = 'Trend: —Ä–æ—Å—Å–∏—è –æ—Ç–∫—Ä—ã—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ'\
    #         f'\nInsight: –ü–æ–∑–¥–Ω–µ–µ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ –†–æ—Å—Å–∏–∏ —É—Ç–≤–µ—Ä–¥–∏–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–µ—Ä–µ—á–µ–Ω—å —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞, –¥–æ–±–∞–≤–∏–≤ –≤ –Ω–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ü–∏—é Siemens, BMW –∏ LEGO'
    bot.send_message(message.chat.id, data, parse_mode='html')


def validateRole(role):
    if (re.match(r"([a-zA-z–∞-—è–ê-–Ø]{3,15}){1}(\s[a-zA-z–∞-—è–ê-–Ø]{3,15}\s){0,3}", role ) != None) and (len(role) < 30):
        return True
    else:
        return False

def validateURL(url):
    if (re.match(r"[-a-zA-Z0-9@:%_\+.~#?&\/=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&\/=]*)?", url ) != None):
        return True
    else:
        return False

def getParseData(JSONdata): 
    return (json.loads(JSONdata)["incites"][0]) + f'\n' + (json.loads(JSONdata)["incites"][1])

def getParseNews(JSONdata): 
    return (json.loads(JSONdata)["news"][0]) + f'\n' + (json.loads(JSONdata)["news"][1])







bot.polling(none_stop=True)
    